{"name":"Java-colorthief","tagline":"Java port of Lokesh Dhakar Color Thief (grab color palette from an image)","body":"#Java Color Thief\r\nA port to Java of Lokesh Dhakar \"Color Thief\" for it to be executed server side on a JEE container or in a J2SE app. See http://lokeshdhakar.com/projects/color-thief/ for more informations and usage example of the javascript version.\r\n\r\n![Example](https://raw2.github.com/soualid/java-colorthief/master/src/test/resources/example.png)\r\n\r\n##How to use\r\nSee test case included in ```org.soualid.colorthief.MMCQTest```. \r\n\r\nBasically :\r\n\r\n```java\r\n\tBufferedImage img = /* read your image here using Image IO */;\r\n\t// Then get the 10 most used colors palette (first being the dominant color of the image)\r\n\tList<int[]> result = MMCQ.compute(img, 10); \r\n```\r\n\r\n##How to build\r\nThis project use Apache Maven.\r\n\r\n##Credits and license\r\n\r\n###Author\r\nSimon Oualid (simon@oualid.net), originally for the wipplay.com website (http://www.wipplay.com)\r\n\r\n###Thanks\r\n* Lokesh Dhakar - for the original Color Thief javascript version, available at http://lokeshdhakar.com/projects/color-thief/\r\n* Nick Rabinowitz - for creating quantize.js (ported here in Java)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}